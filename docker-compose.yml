services:
  postgresql:
    container_name: ec_postgresql
    image: postgres:15.8
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./data/psql/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
      - postgres:/var/lib/postgresql/data

    ports:
      - "5432:5432"
    networks:
      - ecommerce-network
    restart: unless-stopped

  pgadmin:
    container_name: ec_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadmin}
      PGADMIN_CONFIG_SERVER: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - ecommerce-network
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - ecommerce-network

  mongo:
    container_name: ec_mongo
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=karthi
      - MONGO_INITDB_ROOT_PASSWORD=pass

  mongo_express:
    image: mongo-express:latest
    container_name: ec_mongo_express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=karthi
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    ports:
      - "8081:8081"
    entrypoint: [sh, -c, "sleep 20s && tini -- /docker-entrypoint.sh mongo-express"]
    restart: always
    depends_on:
      - mongo

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ec_zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ec_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_LOG)MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - ecommerce-network


  mail-dev:
    container_name: ec_mail_dev
    image: maildev/maildev
    environment:
      - TZ="Europe/London"
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - 1080:1080
      - 1025:1025
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  keycloak:
    container_name: ec_keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - "9098:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: edge
    restart: always
    networks:
      - ecommerce-network
    volumes:
      - keycloak:/opt/jboss/keycloak/standalone/data
    command:
      - "start-dev"

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres:
  mongo:
  pgadmin:
  keycloak:
